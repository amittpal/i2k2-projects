### STAGE 1: Build ###

# We label our stage as ‘builder’
FROM node:10-alpine as builder
LABEL stage=prod-cust-app.intermediate
WORKDIR /app

COPY package.json ./
COPY . .
## Storing node modules on a separate layer will prevent unnecessary npm installs at each build
RUN npm install

RUN rm -rf src/assets/config/appmodulesandroutes.json
RUN rm -rf src/assets/config/settings.json
RUN cp assets/prod/appmodulesandroutes.json src/assets/config/
RUN cp assets/prod/settings.json src/assets/config/

## Build the angular app in production mode and store the artifacts in dist folder
RUN node --max_old_space_size=7144 node_modules/@angular/cli/bin/ng build --configuration=production --output-path=dist

### STAGE 2: Setup ###

FROM nginx:1.14.1-alpine

## Copy our default nginx config
COPY default.conf /etc/nginx/conf.d/

## Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder
COPY --from=builder /app/dist /usr/share/nginx/html

CMD ["nginx", "-g", "daemon off;"]
